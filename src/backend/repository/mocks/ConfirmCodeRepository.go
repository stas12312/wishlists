// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	model "main/model"

	mock "github.com/stretchr/testify/mock"
)

// ConfirmCodeRepository is an autogenerated mock type for the ConfirmCodeRepository type
type ConfirmCodeRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: code
func (_m *ConfirmCodeRepository) Create(code *model.ConfirmCode) (*model.ConfirmCode, error) {
	ret := _m.Called(code)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 *model.ConfirmCode
	var r1 error
	if rf, ok := ret.Get(0).(func(*model.ConfirmCode) (*model.ConfirmCode, error)); ok {
		return rf(code)
	}
	if rf, ok := ret.Get(0).(func(*model.ConfirmCode) *model.ConfirmCode); ok {
		r0 = rf(code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ConfirmCode)
		}
	}

	if rf, ok := ret.Get(1).(func(*model.ConfirmCode) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteByUUID provides a mock function with given fields: uuid
func (_m *ConfirmCodeRepository) DeleteByUUID(uuid string) error {
	ret := _m.Called(uuid)

	if len(ret) == 0 {
		panic("no return value specified for DeleteByUUID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(uuid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByUUID provides a mock function with given fields: uuid
func (_m *ConfirmCodeRepository) GetByUUID(uuid string) (*model.ConfirmCode, error) {
	ret := _m.Called(uuid)

	if len(ret) == 0 {
		panic("no return value specified for GetByUUID")
	}

	var r0 *model.ConfirmCode
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*model.ConfirmCode, error)); ok {
		return rf(uuid)
	}
	if rf, ok := ret.Get(0).(func(string) *model.ConfirmCode); ok {
		r0 = rf(uuid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ConfirmCode)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewConfirmCodeRepository creates a new instance of ConfirmCodeRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfirmCodeRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfirmCodeRepository {
	mock := &ConfirmCodeRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
