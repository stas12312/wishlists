// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// ImageRepository is an autogenerated mock type for the ImageRepository type
type ImageRepository struct {
	mock.Mock
}

// Upload provides a mock function with given fields: filename, file
func (_m *ImageRepository) Upload(filename string, file io.Reader) (string, error) {
	ret := _m.Called(filename, file)

	if len(ret) == 0 {
		panic("no return value specified for Upload")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, io.Reader) (string, error)); ok {
		return rf(filename, file)
	}
	if rf, ok := ret.Get(0).(func(string, io.Reader) string); ok {
		r0 = rf(filename, file)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, io.Reader) error); ok {
		r1 = rf(filename, file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImageRepository creates a new instance of ImageRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImageRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ImageRepository {
	mock := &ImageRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
