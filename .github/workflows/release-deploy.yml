name: release-deploy

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tag: backend
            context: src/backend
          - tag: ui
            context: src/frontend
    steps:
      - name: Set current date
        id: date
        run: |
          echo "build_date=$(date +"%d.%m.%Y %H:%M")" >> $GITHUB_OUTPUT
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build UI
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:${{ matrix.context }}"
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.tag }}:release
          build-args: |
            build_time=${{ steps.date.outputs.build_date }}
            version=${{ github.ref_name }}
            base_url=${{ secrets.PROD_BASE_URL }}
            yandex_metrika_id=${{ secrets.PROD_YANDEX_METRIKA_ID }}
            static_url=${{ secrets.PROD_STATIC_URL }}
            sentry_dsn=${{ secrets.SENTRY_DSN }}
            sentru_auth_token=${{ secrets.SENTRY_AUTH_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-images ]
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_PRIVATE_KEY }}
          script: |
            docker login ${{ env.REGISTRY }} --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} 
            cd ${{ secrets.PROD_PROJECT_PATH }}
            docker-compose pull && docker-compose up -d